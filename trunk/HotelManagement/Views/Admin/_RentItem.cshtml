@using HotelDAL;
@using HotelManagement
@model HotelBLL.Models.RentItemViewModel
<tr id="RentID-@Model.Rent.RentID" >
    <td>@Model.Index
    </td>
    <td>
        @Model.Rent.InvoiceID
    </td>
    <td>
        <input type="hidden" id="RentID" value="@Model.Rent.RentID"/>
        @Model.Rent.Room.RoomName
    </td>
    <td>
        @{
            switch (@Model.Rent.RentType)
            {
                case (int)@RentTypeEnum.Hour:
                    { 
            <span class="label label-important">Theo giờ</span>
                        break;
                    }
                case (int)@RentTypeEnum.Night:
                    { 
            <span class="label label-inverse">Qua dêm</span>
                        break;
                    }
                case (int)@RentTypeEnum.Day:
                    { 
            <span class="label label-danger">Theo ngày</span>
                        break;
                    }

                default:
                    break;
            }    
        }
    </td>
    <td>
        @String.Format("{0:dd-MM-yyyy HH:mm}", Model.Rent.CheckInDate)
    </td>
    <td>
        @String.Format("{0:dd-MM-yyyy HH:mm}", Model.Rent.CheckOutDate)
    </td>
    <td>
        @(((int)(@Model.Rent.OrderFee + @Model.Rent.RentFee)).ToString("N0"))
    </td>
    <td>
        @(((int)Model.Rent.TotalPayment).ToString("N0"))
    </td>
    <td>
        @(((int)(@Model.Rent.OrderFee + @Model.Rent.RentFee - @Model.Rent.TotalPayment)).ToString("N0"))
    </td>
    <td>
        @{
            switch (@Model.Rent.RentStatus)
            {
                case (int)@RentStatusEnum.InStay:
                    { 
            <span class="label label-warning">Ðang thuê</span>
                        break;
                    }
                case (int)@RentStatusEnum.Paid:
                    { 
            <span class="label label-success">Kết thúc</span>
                        break;
                    }
                case (int)@RentStatusEnum.Approved:
                    { 
            <span class="label label-info">Ðã duyệt</span>
                        break;
                    }
                     case (int)@RentStatusEnum.WaitDisabled:
                    {
            <span class="label label-danger">Xin hủy</span>
                        break;
                    }
                     case (int)@RentStatusEnum.Disabled:
                    {
            <span class="label label-inverse">Ðã hủy</span>
                        break;
                    }

                     default:
                    break;
            }    
        }
    </td>
    <td>
        <button class="btn"   onclick="ShowRentDetailReadOnly(@Model.Rent.RentID)" data-rentid="@Model.Rent.RentID"  >
            <i class="icon-tasks"></i>
        </button>
    </td>
    @if (Model.Rent.RentStatus == (int)RentStatusEnum.InStay)
    {
        <td>
            <button class="btn btn-danger" type="submit" onclick="ChangeRentStatus(@Model.Rent.RentID,@Model.Rent.RentStatus,@((int)RentStatusEnum.WaitDisabled),@Model.Index,true,'Bạn có muốn xin hủy dữ liệu này không?')">
                 <i class="icon-minus-sign icon-white"></i>
            </button>
        </td>
    }
    else if (Model.Rent.RentStatus == (int)RentStatusEnum.Paid)
    {
        if (Model.IsAdmin)
        {
        <td>
            <button class="btn btn-success" type="submit" onclick="ChangeRentStatus(@Model.Rent.RentID,@Model.Rent.RentStatus,@((int)RentStatusEnum.Approved),@Model.Index,false,'')">
                <i class="icon-check icon-white"></i>
            </button>
        </td>
        }
                
        <td>
            <button class="btn btn-danger" type="submit" onclick="ChangeRentStatus(@Model.Rent.RentID,@Model.Rent.RentStatus,@((int)RentStatusEnum.WaitDisabled),@Model.Index,true,'Bạn có muốn xin hủy dữ liệu này không?')">
                 <i class="icon-minus-sign icon-white"></i>
            </button>
        </td>
                
    }
    else if (Model.Rent.RentStatus == (int)RentStatusEnum.Approved)
    {

        if (Model.IsAdmin)
        {
        <td>
            <button class="btn btn-danger" type="submit" onclick="ChangeRentStatus(@Model.Rent.RentID,@Model.Rent.RentStatus,@((int)RentStatusEnum.WaitDisabled),@Model.Index,true,'Bạn có muốn xin hủy dữ liệu này không?')">
                 <i class="icon-minus-sign icon-white"></i>
            </button>
        </td>
        }
    }
    else if (Model.Rent.RentStatus == (int)RentStatusEnum.WaitDisabled)
    {
        if (Model.IsAdmin)
        {
        <td>
            <button class="btn btn-danger" type="submit" onclick="ChangeRentStatus(@Model.Rent.RentID,@Model.Rent.RentStatus,@((int)RentStatusEnum.Disabled),@Model.Index,true,'Bạn có muốn đưa dữ liệu này vào thùng rác không?')">
                <i class="icon-trash icon-white"></i>
            </button>
        </td>
        }
    }
    else if (Model.Rent.RentStatus == (int)RentStatusEnum.Disabled)
    {
        if (Model.IsAdmin)
        {
        <td>
            @*Delete permanent*@
            <button class="btn btn-danger" type="submit" onclick="ChangeRentStatus(@Model.Rent.RentID,@Model.Rent.RentStatus,@((int)RentStatusEnum.DeletePermanent),@Model.Index,true,'Bạn có muốn xóa mất dữ liệu này không?')">
                <i class="icon-remove icon-white"></i>
            </button>
        </td>
        }
    }
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
@*<td>
                    @{
                        
                switch (@Model.Rent.RentStatus)
                {

                    case (int)@RentStatusEnum.Paid:
                        { 
                        <button class="btn btn-success" type="submit" data-changestatus="@((int)RentStatusEnum.Approved)" data-rentid="@Model.Rent.RentID" data-index="@Model.Index" onclick="ApproveRent(this)">
                            <i class="icon-check"></i></button>    
                            break;
                        }

                    default:
                        break;
                }    
                    }
                </td>
                <td>
                       @{
                        
                switch (@Model.Rent.RentStatus)
                {

                    case (int)@RentStatusEnum.Paid:
                    case (int)@RentStatusEnum.Approved: 
                        { 
                        <button class="btn btn-danger" type="submit" data-changestatus="@((int)RentStatusEnum.Disabled)" data-rentid="@Model.Rent.RentID" data-index="@Model.Index" onclick="CancelRent(this)">
                            <i class="icon-remove"></i></button>
                                                                                                                                 break;
                        }

                    default:
                        break;
                }    
                    }
                        
                        
                </td>*@
</tr>
