@using HotelDAL
@model HotelBLL.Models.RentViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"> </script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"> </script>
<div id="formDatPhong" class="modal">
    @using (Html.BeginForm("BookRoom", "Room", FormMethod.Post, new { id = "bookRoomForm", style = "margin-top:20px;font-size:0.8em;" }))
    {
     <fieldset>
            @Html.HiddenFor(model => model.Rent.RentID, new { id = "txtRentId" })
            @Html.HiddenFor(model => model.Rent.RoomID, new { id = "txtRoomId" })
            @Html.HiddenFor(model => model.Customer.CustomerID)
            @if (Model.Rent.RentID == 0)
            {
                //Đặt phòng
                <legend>Phòng <span class="formRoomNumber">@Model.Rent.Room.RoomName</span> - Đặt Phòng</legend>
            }
            else
            {
                //Phòng đang thuê - Cập nhật thông tin
                <legend>Phòng <span class="formRoomNumber">@Model.Rent.Room.RoomName</span> - Cập nhật
                    thông tin</legend>
            }
            <div class="leftpanel" style="width: 300px; float: left; margin-top: 20px;">
                <div class="control-group">
                    @Html.LabelFor(model => model.Rent.InvoiceID)
                    <div class="controls">
                        @Html.EditorFor(model => model.Rent.InvoiceID)
                        @Html.ValidationMessageFor(model => model.Rent.InvoiceID)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Customer.CustomerName)
                    <div class="controls">
                        @Html.EditorFor(model => model.Customer.CustomerName)
                        @Html.ValidationMessageFor(model => model.Customer.CustomerName)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Customer.PersonID)
                    <div class="controls">
                        @Html.EditorFor(model => model.Customer.PersonID)
                        @Html.ValidationMessageFor(model => model.Customer.PersonID)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Customer.BikeID)
                    <div class="controls">
                        @Html.EditorFor(model => model.Customer.BikeID)
                        @Html.ValidationMessageFor(model => model.Customer.BikeID)
                    </div>
                </div>
                <div class="control-group">
               
            </div>
            </div>
            <div class="rightpanel" style="width: 300px; float: left; margin-top: 20px;">
                <div class="control-group">
                    @Html.LabelFor(model => model.Rent.CheckInDate)
                    <div class="controls">
                        @Html.EditorFor(model => model.Rent.CheckInDate)
                        @Html.ValidationMessageFor(model => model.Rent.CheckInDate)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Rent.RentType)
                    <div class="controls">
                        @Html.HiddenFor(model => model.Rent.RentType, new { id = "hdfRentType", value = "1" })
                        <div class="btn-group" data-toggle="buttons-radio">
                            <button type="button" class="btn active" id="btnHourFee" onclick="ChangeRentType(this)" data-rentType =@((int)RentTypeEnum.Hour)>
                                Theo giờ</button>
                            <button type="button" class="btn" id="btnNightFee" onclick="ChangeRentType(this)" data-rentType =@((int)RentTypeEnum.Night)>
                                Qua đêm</button>
                            <button type="button" class="btn" id="btnDayFee" onclick="ChangeRentType(this)" data-rentType =@((int)RentTypeEnum.Day)>
                                Theo ngày</button>
                        </div>
                        </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Rent.Notes)
                    <div class="controls">
                        @Html.TextAreaFor(model => model.Rent.Notes, new{style="height:100px;"})
                        @Html.ValidationMessageFor(model => model.Rent.Notes)
                    </div>
                </div>
            </div>
            <div class="control-group">
                <div class="controls">
                    @if (Model.Rent.RentID == 0)
                    {
                        <button class="btn btn-primary"  data-roomid="@Model.Rent.RoomID" type="submit" >
                            Đặt Phòng</button>
                    }
                    else
                    {
                        <button class="btn btn-primary"  data-roomid="@Model.Rent.RoomID" type="submit" >
                            Cập nhật</button>
                    }
                    <a href="#" class="btn" onclick="CloseWindowsFromAjax()">Đóng</a>
                </div>
            </div>
        </fieldset>
    }
    <script type="text/javascript">
        
        
        function  ChangeRentType(parameters) {
            //Change rent type button
            $("#hdfRentType").val($(parameters).attr("data-rentType"));
        }





        $(document).ready(function () {
            //Focus rent type button
            var rentType = $("#hdfRentType").val();

            if (rentType == 0) {
                $("#hdfRentType").val("1");
            }
            else {

                $('[data-rentType]').removeClass("active");
                $('[data-rentType =' + rentType + ']').addClass("active");
            }
            



            $("#bookRoomForm").validate();
            var rentID = $('#txtRentId').val();
            if (rentID != 0) {
                var date = $('#Rent_CheckInDate').val();
                $('#Rent_CheckInDate').val(ConvertDateVNToUS(date));
                $('#Rent_CheckInDate').datetimepicker({
                    dateFormat: 'dd-mm-yy'
                });
                $('#Rent_CheckInDate').datetimepicker('setDate', (new Date($('#Rent_CheckInDate').val())));
            }


            $('#bookRoomForm').unbind('submit').bind('submit', function () {
                if ($('#bookRoomForm').valid()) {
                    var roomNumber = $('#txtRoomId').val();
                    if (rentID == 0) {// Day la form dat moi
                        
                        $.ajax({
                            url: this.action,
                            type: this.method,
                            data: $(this).serialize(),
                            success: function (result) {
                                $("#contain-" + roomNumber).fadeOut(300, function () {
                                    $("#contain-" + roomNumber).html(result);
                                    $("#contain-" + roomNumber).fadeIn();
                                });

                            }
                        });
                        CloseWindowsFromAjax();
                    }
                    else { //Form update


                        $.ajax({
                            url: "/Room/UpdateRentInfo",
                            type: this.method,
                            data: $(this).serialize(),
                            success: function (result) {
                                $("#contain-" + roomNumber).fadeOut(300, function () {
                                    $("#contain-" + roomNumber).html(result);
                                    $("#contain-" + roomNumber).fadeIn();
                                });
                            }
                        });

                        CloseWindowsFromAjax();
                    }

                }
                return false;
            });
        });
        $(function () {
            $("#BookRoomView_CustomerName").autocomplete({
                minLength: 1,
                source: "Room/GetCustomers",
                focus: function (event, ui) {
                    $("#BookRoomView_CustomerName").val(ui.item.label);

                    return false;
                },
                select: function (event, ui) {
                    $("#BookRoomView_PersonID").val(ui.item.PersonID);
                    $("#BookRoomView_BikeID").val(ui.item.BikeID);
                    return false;
                }
            });
        });




      
        
    </script>
</div>
